N = 10^6; 
rand('state',100);
randn('state',200);  
ip = rand(1,N)>0.5; 
s = 2*ip-1; 
n = 1/sqrt(2)*[randn(1,N) + 1j*randn(1,N)]; 
Eb_N0_dB = 0:35;  
nErrAWGN = zeros(1, length(Eb_N0_dB)); 
nErrRayleigh = zeros(1, length(Eb_N0_dB)); 
for ii = 1:length(Eb_N0_dB) 
yAWGN = s + 10^(-Eb_N0_dB(ii)/20)*n; 
h = 1/sqrt(2) * (randn(1,N) + 1j*randn(1,N)); 
yRayleigh = h .* s + 10^(-Eb_N0_dB(ii)/20)*n; 
ipHatAWGN = real(yAWGN)>0; 
nErrAWGN(ii) = sum(ip ~= ipHatAWGN); 
yRayleigh_eq = yRayleigh ./ h;  
ipHatRayleigh = real(yRayleigh_eq) > 0; 
nErrRayleigh(ii) = sum(ip ~= ipHatRayleigh); 
end 
simBerAWGN = nErrAWGN / N;  
simBerRayleigh = nErrRayleigh / N; 
theoryBerAWGN = 0.5*erfc(sqrt(10.^(Eb_N0_dB/10)));
theoryBerRayleigh = 0.5 * (1 - sqrt(10.^(Eb_N0_dB/10) ./ (1 + 10.^(Eb_N0_dB/10)))); 
figure; 
semilogy(Eb_N0_dB, theoryBerAWGN, 'c-d', 'LineWidth', 1.5); hold on; 
semilogy(Eb_N0_dB, theoryBerRayleigh, 'b-s', 'LineWidth', 1.5);  
semilogy(Eb_N0_dB, simBerRayleigh, 'm-x', 'LineWidth', 1.5);  
axis([0 35 1e-5 0.5]); 
grid on; 
legend('AWGN-Theory', 'Rayleigh-Theory', 'Rayleigh-Simulation'); 
xlabel('Eb/No, dB'); 
ylabel('Bit Error Rate'); 
title('BER for BPSK modulation in Rayleigh channel'); 
